# WARNING: f6251 has a circular dependency on f1040.  f1040 line.17.alternative.minimum.tax.whole
# depends on the final result, f6251 part.2.line.11.amt.whole.  However, f6251
# also depends on f1040.

name.first.and.initial:
  3: ctx.firstName + ' ' + ctx.middleInitial

name.last:
  4: ctx.lastName

ssn.nodash:
  5: ctx.ssn

name.spouse.first:
  value: ctx.spouse
  calculate: |
    (ctx, value) => {
      if (!value) {
        return { fill: '', field: '6' };
      }
      return {
        fill: value.firstName + ' ' + value.middleInitial,
        field: '6'
      };
    }

name.spouse.last:
  value: ctx.spouse
  calculate: |
    (ctx, value) => {
      if (!value) {
        return { fill: '', field: '7' };
      }
      return {
        fill: value.lastName,
        field: '7'
      };
    }

ssn.spouse.nodash:
  value: ctx.spouse
  calculate: |
    (ctx, value) => {
      if (!value) {
        return { fill: '', field: '8' };
      }
      return {
        fill: value.ssn,
        field: '8'
      };
    }

address.street:
  9: ctx.address.street

address.apt:
  10: ctx.address.apt

address.city:
  11: ctx.address.city

foreign.country:
  14: ctx.address.country

foreign.province.county:
  15: ctx.address.county

foreign.postal.code:
  16: ctx.address.postCode

digital.assets:
  value: ctx.financial.haveVirtualCurrency
  calculate: |
    (ctx, value) => {
      return {
        yes: { fill: 1, field: '25' },
        no: { fill: 2, field: '26' }
      }[value]
    }

filing.status:
  value: ctx.financial.filingStatus.toLowerCase()
  calculate: |
    (ctx, value) => {
      return {
        'single':                    { fill: '1', field: '19' },
        'head of household':         { fill: '2', field: '20' },
        'married filing jointly':    { fill: '3', field: '21' },
        'married filing separately': { fill: '4', field: '22' },
        'qualifying widow(er)':      { fill: '5', field: '23' }
      }[value];
    }

line.1a.wages.salary.tips.whole:
  55: (ctx.financial.income / ctx.financial.averageExchangeRate)

line.1z.subtotal.whole:
  64: ctx.forms["f1040"]["line.1a.wages.salary.tips.whole"]

line.9.total.income.whole:
  # Add lines 1, 2b, 3b, 4b, 5b, 6b, 7, and 8. This is your total income
  79: ctx.forms["f1040"]["line.1a.wages.salary.tips.whole"]

line.10.adjustments.to.income.schedule.1.whole:
  # Adjustments to income from Schedule 1, line 22
  80: 0

line.11.adjusted.gross.income.whole:
  # Subtract line 10c from line 9. This is your adjusted gross income
  81: ctx.forms["f1040"]["line.9.total.income.whole"]
      - ctx.forms["f1040"]["line.10.adjustments.to.income.schedule.1.whole"]

line.12.standard.deduction.whole:
  # Single or Married filing separately, $12,200
  # • Married filing jointly or Qualifying widow(er), $24,400
  # • Head of household, $18,350
  # • If you checked any box under Standard Deduction, see instructions.
  value: ctx.financial.filingStatus.toLowerCase()
  calculate: |
    (ctx, value) => {
      return {
        'single':                    { fill: 13850, field: '82' },
        'married filing separately': { fill: 13850, field: '82' },
        'married filing jointly':    { fill: 27700, field: '82' },
        'qualifying widow(er)':      { fill: 27700, field: '82' },
        'head of household':         { fill: 20800, field: '82' }
      }[value];
    }

line.14.total.deductions.whole:
  # Add lines 12a and 12b
  84: ctx.forms["f1040"]["line.12.standard.deduction.whole"]

line.15.taxable.income.whole:
  # Subtract line 14 from line 11
  85: Math.max(0,
          (ctx.forms["f1040"]["line.11.adjusted.gross.income.whole"])
          - (ctx.forms["f1040"]["line.14.total.deductions.whole"])
      )

line.16.tax.whole:
  # Tax (see instructions).
  # see: TAX COMPUTATION WORKSHEET ("married filing separately") p77.
  #
  # > Tax Table or Tax Computation Worksheet. If your taxable income is
  # > less than $100,000, you must use the Tax Table, later in these
  # > instructions, to figure your tax. Be sure you use the correct column.
  # > If your taxable income is $100,000 or more, use the Tax Computation
  # > Worksheet right after the Tax Table.
  #
  # **NOTE**: You must read "IRS f1040 instructions".
  #
  # **NOTE**: I believe that, in the case of foreign earned income, you never
  # want the IRS to calculate your tax, so this assumes the worksheet
  # calculation.
  #
  # **NOTE**: The "Tax Computation Worksheet" is found in the f1040
  # instructions and is calculated per-filing status. The code below implements
  # the worksheet for "Married filing separately" (Section C) only.
  #
  value: ctx.forms["f1040"]["line.15.taxable.income.whole"]
  calculate: |
    (ctx, value) => {
      let taxComputationWorksheetValue;
      if (value < 100000) {
        throw new Error(`The taxable income ${value} is < $100,000 and requires you use a tax table (not implemented)`);
      }
      // Tax Computation Worksheet (married filing separately)
      if (value >= 100000 && value < 182100) {
        taxComputationWorksheetValue = value * 0.24 - 6600.00;
      } else if (value >= 182100 && value < 231250) {
        taxComputationWorksheetValue = value * 0.32 - 21168.00;
      } else if (value >= 231250 && value < 346875) {
        taxComputationWorksheetValue = value * 0.35 - 28105.50;
      } else {
        taxComputationWorksheetValue = value * 0.37 - 35043.00;
      }
      // include this amount on the entry space on Form 1040 or 1040-SR, line 12a
      return { field: '90', fill: taxComputationWorksheetValue };
    }

line.17.alternative.minimum.tax.whole:
  # Amount from Schedule 2, line 3
  #
  # **NOTE:** This value is important for the calculation of the Alternative
  # Minimum Tax used when calculating foreign earned income.  The value is
  # from Schedule 2, line 3, which is your Alternative Minimum Tax (f6251).
  #
  # **NOTE:** The foreign references may not be defined yet, so fields like
  # this may need to take that into account and assign `||0` when undefined.
  91: ctx.forms["f6251"]["part.2.line.11.amt.whole"] || 0 # WARNING: needed

line.18.tax.and.amt.whole:
  # Add lines 16 and 17
  92: ctx.forms["f1040"]["line.16.tax.whole"] +
    ctx.forms["f1040"]["line.17.alternative.minimum.tax.whole"]

line.20.schedule.3.additional.credits.whole:
  # Amount from Schedule 3, line 8
  # **NOTE**: Foreign tax credit (f116 required)
  94: ctx.forms["f1040s3"]["part.i.8.total.whole"] || 0

line.21.total.tax.credits.whole:
  # Add lines 19 and 20
  95: ctx.forms["f1040"]["line.20.schedule.3.additional.credits.whole"]

line.22.tax.and.amt.minus.foreign.tax.credit.whole:
  # Subtract line 21 from line 18. If zero or less, enter -0- . .
  96: Math.max(0,
        ctx.forms["f1040"]["line.18.tax.and.amt.whole"]
        - ctx.forms["f1040"]["line.21.total.tax.credits.whole"]
      )

line.24.total.tax.whole:
  # Add lines 22 and 23. This is your total tax
  98: ctx.forms["f1040"]["line.22.tax.and.amt.minus.foreign.tax.credit.whole"]

line.31.schedule.3.other.refundable.credits.whole:
  # Amount from Schedule 3, line 13
  108: ctx.forms["f1040s3"]["part.ii.13.other.refundable.credits.total.whole"]

line.32.total.refundable.credits.whole:
  # Add lines 27a and 28 through 31. These are your total other payments and
  # refundable credits
  109: ctx.forms["f1040"]["line.27.whole"] +
    ctx.forms["f1040"]["line.28.whole"] +
    ctx.forms["f1040"]["line.29.whole"] +
    ctx.forms["f1040"]["line.30.whole"] +
    ctx.forms["f1040"]["line.31.whole"]

line.33.total.payments.whole:
  # Add lines 25d, 26, and 32. These are your total payments
  110: ctx.forms["f1040"]["line.17.a.whole"] +
    ctx.forms["f1040"]["line.32.total.refundable.credits.whole"]

line.37.amount.you.owe.whole:
  # Subtract line 33 from line 24. This is the amount you owe now
  119: ctx.forms["f1040"]["line.24.total.tax.whole"] -
    ctx.forms["f1040"]["line.33.total.payments.whole"]

third.party.designee:
  # 121: 1 is "yes"
  # 122: 2 is "no"
  122: 2

occupation:
  126: ctx.occupation

phone:
  130: ctx.phone

email:
  131: ctx.email
